// 1263 시간 관리
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool comp (pair<int,int> &t1, pair<int,int> &t2)
{
    if (t1.second > t2.second)
        return true;
    else if (t1.second == t2.second)
        if (t1.first >= t2.first)
            return true;
    return false;
}

int main()
{
    int n;
    cin >> n;
    
    vector<pair<int,int>> v(n);
    for (int i = 0 ; i < n; i++)
    {
        cin >> v[i].first >> v[i].second;
    }
    
    // second 시간 내에 끝내야 하는 일은 내림차순으로 정렬 
    // 그 중, first 시간이 걸리는 일은 내림차순으로 정렬
    sort(v.begin(), v.end(), comp);
    
    // 가장 마지막에 해도 되는 일부터 시작한다.
    // curTime: 업무를 마치기 위해서, 시작해야 하는 시간.
    int curTime = v[0].second - v[0].first;
    bool isWrong = false;
    for (int i = 1 ; i < n; i++)
    {
        //cout << v[i].first << " " << v[i].second << endl;

        // 업무 시작시간은 무조건 끝날 시간보다 앞이여야 한다.
        if (v[i].second <= curTime)
        {
            curTime = v[i].second;
        }
        
        if (curTime - v[i].first <= v[i].second)
        {
            curTime -= v[i].first;
        }
        else
        {
            // 순서대로 처리하지만, 시간이 겹치는 경우에는 할 수 없다
            isWrong = true;
            break;
        }
    }
    
    if (isWrong || curTime < 0)
        cout << -1 << endl;
    else
        cout << curTime << endl;

    return 0;
}
