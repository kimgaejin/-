// 1929 소수 구하기
#include <iostream>
#include <vector>
#include <string>

using namespace std;

int main()
{
    
    int n, m;
    cin >> n >> m;

    // 가장 큰 값 +1 만큼의 배열을 만든다.
    vector<int> v(m+1, 0);
    v[0] = 1; // 0과 1은 소수가 아니다
    v[1] = 1;
    
    for (int i = 2; i <= m ; i++)
    {
        // 이미 v[i]가 소수라면, 그 배수도 소수이므로 넘긴다.
        if (v[i] == 1)
            continue;
        
        // v[i]가 소수가 아닌 경우, 최댓값과 가까울 때 까지
        // v[i]의 배수들을 모두 소수가 아니라고 처리해둔다.
        for (int j = 2; i * j <= m; j++)
        {
            if (v[i*j] == 0)
            {
                v[i*j] = 1;
            }
        }
    }
    
    // 소수만 출력, 출력 속도 높이기 위해 문자열로 한 번에 호출
    string r = "";
    for (int i = n; i <= m; i++)
        if (v[i] == 0)
            r += to_string(i) + "\n";
    cout << r << endl;

    return 0;
}

